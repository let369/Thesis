#Configuration for Logstash pipeline
input {
	twitter{
		consumer_key => ""
		consumer_secret => ""
		oauth_token => ""
		oauth_token_secret => ""
		keywords => ["trump"]
		languages => ["en"]
		full_tweet => true
	}
}
filter{
	if "trump" not in [text]{
		drop { }
	}
	if [place][name]{
		ruby {
	    	code => 'event.set("city", event.get("[place][name]"))'
	  	}
	}
	if [place][country]{
		ruby {
	    	code => 'event.set("country", event.get("[place][country]"))'
	  	}
	}
	if [entities][hashtags]{
		ruby {
	    	code => 'event.set("hashtags", event.get("[entities][hashtags]"))'
	  	}
	}
	if [entities][user_mentions]{
		ruby {
	    	code => 'event.set("mentioned_users", event.get("[entities][user_mentions]"))'
	  	}
	}
	if [user][friends_count]{
		ruby {
	    	code => 'event.set("friends_count", event.get("[user][friends_count]"))'
	  	}
	}
	if [user][description]{
		ruby {
	    	code => 'event.set("user_description", event.get("[user][description]"))'
	  	}
	}
	if [user][screen_name]{
		ruby {
	    	code => 'event.set("screen_name", event.get("[user][screen_name]"))'
	  	}
	}
	if [user][time_zone]{
		ruby {
	    	code => 'event.set("timezone", event.get("[user][time_zone]"))'
	  	}
	}
	if [user][statuses_count]{
		ruby {
	    	code => 'event.set("total_posts", event.get("[user][statuses_count]"))'
	  	}
	}
	if [user][followers_count]{
		ruby {
	    	code => 'event.set("followers", event.get("[user][followers_count]"))'
	  	}
	}
	if [user][location]{
		ruby {
	    	code => 'event.set("location", event.get("[user][location]"))'
	  	}
	}
	prune {
    	whitelist_names => ["^created_at$","^retweet_count$","^text$","^lang$","^timezone$","^location$","^city$","^country$","^hashtags$","^mentioned_users$","^friends_count$","^user_description$","^screen_name$","^total_posts$","^followers$"]
  	}
  	if [country]{
  		ruby{
  			code => 'event.set("loc", event.get("city")+" "+event.get("country"))'
  		}
  	}
  	else if [location]{
  		ruby{
  			code => 'event.set("loc", event.get("location").gsub(","," "))'
  		}
  	}
  	else if [timezone]{
  		ruby{
  			code => 'event.set("loc", event.get("timezone"))'
  		}
  	}
  	if [loc]{
	ruby {
        code => 'require "open3"
        		 location = event.get("loc")
                 cmd =  "python /Users/kar_lef/Desktop/Thesis/scripts/latlongcalc.py #{location} "
                 stdin, stdout, stderr = Open3.popen3(cmd)
                 event.set("[geolocation][lat]", stdout.readline.delete!("\n"))
                 event.set("[geolocation][lon]", stdout.readline.delete!("\n"))
                 err = stderr.read
                 if err.to_s.empty?
                   filter_matched(event)
                 else
                   event.set("ext_script_err_msg", err)
                 end'
        remove_field => [loc]
    }
    }
    ruby {
        code => 'require "open3"
        		 text = event.get("text")
                 cmd =  "python /Users/kar_lef/Desktop/Thesis/scripts/analysis.py #{text} "
                 stdin, stdout, stderr = Open3.popen3(cmd)
                 event.set("sentiment", stdout.read.delete!("\n"))
                 err = stderr.read
                 if err.to_s.empty?
                   filter_matched(event)
                 else
                   event.set("ext_script_err_msg", err)
                 end'
   }
}
output {
	stdout{codec => rubydebug { } }
	elasticsearch {
    	hosts => ["localhost:9200"]
    	index => "twitterposts"
  	}
}